
name: Windows release

on:
    release:
      types:
        - created

jobs:
    windows:
        name: Windows Py${{ matrix.PYTHON_VERSION }}
        runs-on: windows-latest
        env:
            PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
            RUNNER_OS: "windows"
        strategy:
            fail-fast: false
            matrix:
                PYTHON_VERSION: ["3.7", "3.8", "3.9", "3.10"]
        steps:
            - name: Checkout branch
              uses: actions/checkout@v3
            - name: Install latest Rust stable
              uses: actions-rs/toolchain@v1
              with:
                toolchain: stable
                target: x86_64-pc-windows-msvc
                override: true
                components: rustfmt, clippy
            - name: Install miniconda
              uses: conda-incubator/setup-miniconda@v2
              with:
                auto-update-conda: true
                miniforge-version: latest
                mamba-version: "*"
                activate-environment: test
                channels: conda-forge,defaults
                python-version: ${{ matrix.PYTHON_VERSION }}
            - name: Conda env info
              shell: bash -l {0}
              run: conda env list
            - name: Install build/test dependencies
              shell: bash -l {0}
              run: pip install maturin toml
            - name: Build and publish wheels and sdist
              if: ${{ matrix.PYTHON_VERSION == '3.10' }}
              env:
                MATURIN_PASSWORD: ${{secrets.MATURIN_PASSWORD}}
                MATURIN_USERNAME: ${{secrets.MATURIN_USERNAME}}
              shell: bash -l {0}
              run: maturin publish -i $(which python) -u $MATURIN_USERNAME
            - name: Build and publish wheels
              if: ${{ matrix.PYTHON_VERSION != '3.10' }}
              env:
                MATURIN_PASSWORD: ${{secrets.MATURIN_PASSWORD}}
                MATURIN_USERNAME: ${{secrets.MATURIN_USERNAME}}
              shell: bash -l {0}
              run: maturin publish -i $(which python) -u $MATURIN_USERNAME --no-sdist
